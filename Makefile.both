#################################################
#						#
#	Dave GNUkem makefile by			#
#	Vytautas Shaltenis, a.k.a. rtfb		#
#	"ported" fom Allegro			#
#						#
#     The 'clean' target requires rm from the	#
#	fileutils package			#
#						#
#################################################



# set some useful paths and variables
OBJ_DIR = obj_both

RELEASE_PROGRAMNAME = DaveGNUkem.exe
DEBUG_PROGRAMNAME = DaveGNUkem_debug.exe
PROFILE_PROGRAMNAME = DaveGNUkem_profile.exe
MAINFILE = win32/winmain.cpp

# Libraries to link with
LIBS = -lSDL_mixer -lSDL -lwinmm


# Object files
OBJS =	ed.o		\
	ed_common.o	\
	ed_lvled.o	\
	ed_spred.o	\
	ed_macros.o	\
	ed_DrawBoxContents.o	\
	sys_log.o	\
	sys_error.o	\
	m_misc.o	\
	graph.o		\
	block.o		\
	djstring.o	\
	djimage.o	\
	djlog.o		\
	mission.o	\
	mixins.o	\
	level.o		\
	sdl/djgraph.o	\
	sdl/djinput.o	\
	sdl/djsound.o	\
	sdl/djtime.o	\
	main.o		\
	game.o		\
	menu.o		\
	credits.o	\
	instructions.o	\
	inventory.o	\
	hiscores.o	\
	thing.o		\
	hero.o		\
	settings.o	\
	keys.o		\



# --------------- Debug build -----------------
ifdef DEBUG
LFLAGS =
OFLAGS = -g
DFLAGS = -DDAVE_DEBUG
PROGRAMNAME = $(DEBUG_PROGRAMNAME)

# --------------- Pofile build ---------------
else
ifdef PROFILE
LFLAGS = -pg
OFLAGS = -pg -mpentium -O2 -ffast-math
DFLAGS = -DDAVE_PROFILE
PROGRAMNAME = $(PROFILE_PROGRAMNAME)

# --------------- Normal optimised build ------
else
ifdef RELEASE
LFLAGS = -s
OFLAGS = -mpentium -O2 -ffast-math -fomit-frame-pointer
DFLAGS = -DDAVE_RELEASE
PROGRAMNAME = $(RELEASE_PROGRAMNAME)
endif
endif
endif


# --------------- Are we picky? ---------------
ifdef NO_WARNMODE
WFLAGS =
else
WFLAGS = -Wtrigraphs -Wformat -Werror-implicit-function-declaration -Wunused -W
endif

# --------------- No we're not. _Are_we_picky_?  :)) ---------------
ifdef PARANOIA
DFLAGS += -DDAVE_PARANOIAC
endif


SYSTEM = -DUSESDL -DSYS_WIN32 -DDAVE_GAME -fvtable-thunks

# Flags for GCC when compiling C/C++ files
CFLAGS = -Ic:/bin/MinGW32/include/sdl $(DFLAGS) $(SYSTEM) $(WFLAGS) $(OFLAGS)

# Flags for GCC when compiling assembler files
SFLAGS = $(DFLAGS) $(SYSTEM) $(WFLAGS)



PATH_OBJS = $(addprefix $(OBJ_DIR)/, $(OBJS))


.PRECIOUS: $(OBJ_DIR)/%.o



#all:	msg common_build
all:	common_build


rebuild: msg_rebuild clean common_build


#common_build: create_objdir $(PATH_OBJS)
#	g++ $(CFLAGS) -o $(PROGRAMNAME) $(MAINFILE) $(LFLAGS) $(PATH_OBJS) $(LIBS)
#	@echo All done.
common_build: create_objdir $(PATH_OBJS)
	g++ $(CFLAGS) -o $(PROGRAMNAME) $(MAINFILE) $(LFLAGS) $(PATH_OBJS) $(LIBS)


create_objdir:
	@$(MINGDIR)/bin/mkdir -p $(OBJ_DIR)
#	c:\bin\mingw11_test\bin\mkdir -p $(OBJ_DIR)

msg_rebuild:
	@echo -e "FULL REBUILD INVOKED. G2SMOKE!  :)"


msg:
	@echo Compiling $(PROGRAMNAME). Please wait...

lib: $(LIB)

$(OBJ_DIR)/%.o: %.cc
	g++ $(CFLAGS) -o $@ -c $<

$(OBJ_DIR)/%.o: %.cpp
	g++ $(CFLAGS) -o $@ -c $<

$(LIB): $(PATH_OBJS)
	ar rs $(LIB) $(PATH_OBJS)

clean:
	-rm -v $(OBJ_DIR)/*.*

